---
title: "HW 02"
author: "Nilotpal Rajbongshi"
format: 
  html:
    embed-resources: true
toc: true
execute:
  warning: false
  error: false
  message: false
---

## 0 - Setup

```{r setup}
if (!require("pacman")) 
  install.packages("pacman")

# use this line for installing/loading
pacman::p_load(dsbox, 
               dplyr, 
               ggplot2,
               ggridges,
               forcats,
               tidyverse,
               janitor,
               fs,
               scales,
               stringr,
               readr) 

devtools::install_github("tidyverse/dsbox")
```

## 1 - A new day, a new plot, a new geom
## Question 1: Ridgeline Plot of Airbnb Review Scores
```{r}
#| label: Question 1
# Load and prepare data
data("edibnb", package = "dsbox")

# Clean and transform
edibnb_clean <- edibnb %>%
  filter(
    !is.na(review_scores_rating),
    !is.na(neighbourhood)
  ) %>%
  mutate(
    neighbourhood = fct_reorder(neighbourhood, review_scores_rating, median)
  )

# Plot: Ridgeline of Airbnb review scores by neighborhood
ggplot(edibnb_clean, aes(x = review_scores_rating, y = neighbourhood)) +
  geom_density_ridges(
    scale = 2,
    rel_min_height = 0.01,
    aes(fill = neighbourhood),
    color = "gray40",
    show.legend = TRUE
  ) +
  labs(
    title = "Plot of Airbnb Review Scores by Neighborhood in Edinburgh",
    subtitle = "Neighborhoods are ordered by their median review scores",
    x = "Review Score Rating",
    y = "Neighborhood",
    fill = "Neighborhood",
    caption = "Source: dsbox package, edibnb dataset"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size = 14),
    plot.subtitle = element_text(size = 12, color = "gray40"),
    axis.title.x = element_text(size = 12),
    axis.title.y = element_text(size = 12)
  )
```
The ridgeline plot displays the distribution of Airbnb review scores across Edinburgh neighborhoods. Neighborhoods are ordered by their median review scores, allowing us to easily compare their central tendencies and spread. Higher ridges indicate more frequent score values. We observe that some areas consistently have higher review scores, while others show greater variability. Listings with missing neighborhood or review data were excluded here.

## 2 - Foreign Connected PACs

```{r}
#| label: Question 2
# Step 1: List files with "Foreign Connected PAC" in the filename
list_of_files <- dir_ls(path = "data", regexp = "Foreign Connected PAC")

# Step 2: Read and clean data by retaining the filename (as year)
pac <- read_csv(list_of_files, id = "year", show_col_types = FALSE) %>%
  clean_names() %>%
  # Extract the year (as a four-digit number) from the file path and convert to integer
  mutate(year = as.integer(str_extract(year, "\\d{4}")))

# Step 3: Clean currency columns (Total, Dems, Repubs) by removing $ and commas
pac_clean <- pac %>%
  mutate(across(c(total, dems, repubs), 
                ~ parse_number(str_replace_all(., "[$,]", ""))))

# Step 4: Reshape the data from wide to long format
pac_long <- pac_clean %>%
  pivot_longer(
    cols = c(dems, repubs),
    names_to = "party",
    values_to = "amount"
  ) %>%
  mutate(
    party = recode(party,
                   "dems" = "Democrat",
                   "repubs" = "Republican")
  )

# Step 5: Filter for UK-connected PACs and summarize contributions per year and party
uk_pac_summary <- pac_long %>%
  filter(str_starts(country_of_origin_parent_company, regex("UK/", ignore_case = TRUE))) %>%
  group_by(year, party) %>%
  summarise(total_amount = sum(amount, na.rm = TRUE), .groups = "drop")

# Step 6: Create the plot
print(ggplot(uk_pac_summary, aes(x = year, y = total_amount, color = party)) +
  geom_line(linewidth = 1.5) +
  scale_y_continuous(labels = dollar_format(scale = 1e-6, suffix = "M", accuracy = 0.1)) +
  labs(
    title = "Contributions to US Political Parties from UK-Connected PACs",
    x = "Year",
    y = "Total Amount",
    color = "Party",
    caption = "Source: OpenSecrets.org"
  ) +
  theme_minimal(base_size = 12) +
  scale_color_manual(values = c("Democrat" = "blue", "Republican" = "red")))

glimpse(uk_pac_summary)
```

## 3 - Median housing prices in the US


## 4 - Expect More. Plot More.


## 5 - Mirror, mirror on the wall, whoâ€™s the ugliest of them all?
